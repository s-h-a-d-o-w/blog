---
import type { MarkdownInstance } from "astro";
import type { FrontMatter } from "../types";
import { truncateHtml } from '../utils/truncateHtml'
import { NUM_CHARACTERS_DESCRIPTION } from '../utils/consts';

export interface Props {
  posts: MarkdownInstance<FrontMatter>[];
}

const { posts } = Astro.props;
---

<div class="article-container">
  {
    posts.map((post, index) => {
      const href = `/blog/${post.file.split("/").pop()?.split(".").shift()}`;

      return (
        <>
          {index !== 0 && <hr />}
          <a href={href} class="post-link">
            <article class="post-item">
              <h2>
                {post.frontmatter.title}
              </h2>
              <div
                set:html={truncateHtml(
                  post.compiledContent().slice(0, NUM_CHARACTERS_DESCRIPTION),
                )}
              />
              <div class="post-item-footer">
                <span class="post-item-date">
                  â€” {new Date(post.frontmatter.publishDate).toLocaleDateString()}
                </span>
              </div>
            </article>
          </a>
        </>
      );
    })
  }
</div>

<style>
  h2 {
    text-decoration: underline;
  }

  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  hr {
    margin: 60px auto;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  .post-link {
    text-decoration: none;
    color: inherit;
    cursor: pointer;
    display: block;
  }

  .post-link:hover, .post-link:hover .post-item-date {
    color: var(--primary-color);
  }
</style>
