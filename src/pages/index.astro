---
import type { MarkdownInstance } from 'astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import type { FrontMatter } from '../types';
import { truncateHtml } from '../utils/truncateHtml'
import { NUM_CHARACTERS_DESCRIPTION } from '../utils/consts';

const title = "Andreas Opferkuch's blog";
const description = 'Thoughts mostly on frontend technology and TypeScript.';
const permalink = `${Astro.site?.href}`;

let allPosts = await Astro.glob('../../posts/*.md') as MarkdownInstance<FrontMatter>[];
allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());
---

<BaseLayout title={title} description={description} permalink={permalink} isRoot>
  <div class="article-container">
    {allPosts.map((post, index) => {
      const href = `/${post.file.split('/').pop()?.split('.').shift()}`;

      return (
        <div>
          { index !== 0 && <hr /> }
          <div class="post-item">
            <h2>
              <a href={href}>{post.frontmatter.title}</a>
            </h2>
            <div set:html={truncateHtml(post.compiledContent().slice(0, NUM_CHARACTERS_DESCRIPTION))} />
            <div class="post-item-footer">
              <span class="post-item-date">â€” {new Date(post.frontmatter.publishDate).toLocaleDateString()}</span>
            </div>
          </div>
        </div>
      )
    })}
  </div>
</BaseLayout>

<style>
  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  hr {
    margin: 60px auto;
  }
</style>
