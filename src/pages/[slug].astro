---
import BaseLayout from '../layouts/BaseLayout.astro';
import type { MarkdownInstance } from 'astro';
import { truncateHtml } from '../utils/truncateHtml';
import { NUM_CHARACTERS_DESCRIPTION } from '../utils/consts';
import CopyButtonWrapper from '../components/CopyButtonWrapper.astro';

export async function getStaticPaths() {
  const posts = (await Astro.glob('../../posts/*.md')) as MarkdownInstance<Record<string, any>>[];
  return posts.map(p => {
    const slug =p.file.split('/').pop()?.split('.').shift()
    return {
    params: { slug },
    props: { post: p, slug },
  }});
}

const { Content, frontmatter, compiledContent } = Astro.props.post;
const { title,  publishDate, lastUpdated } = frontmatter;
const description = truncateHtml(compiledContent().slice(0, NUM_CHARACTERS_DESCRIPTION))
const slug = Astro.props.slug
const permalink = `${Astro.site?.href}${slug}`;
---

<BaseLayout title={title} description={description} permalink={permalink}>
  <header>
    <p>{new Date(publishDate).toLocaleDateString()}</p>
    {lastUpdated  && <p style={{
      marginTop: "-1.5rem",
      textTransform: "none",
    }}>Last updated: {new Date(lastUpdated).toLocaleDateString()}</p>}
    <h1>{title}</h1>
    <hr />
  </header>
  <div class="article-container">
    <article class="content">
      <CopyButtonWrapper>
        <Content />
      </CopyButtonWrapper>
    </article>
    <div class="giscus" />
  </div>
</BaseLayout>

<script src="https://giscus.app/client.js"
        data-repo="s-h-a-d-o-w/blog"
        data-repo-id="R_kgDOM41aeA"
        data-category="Announcements"
        data-category-id="DIC_kwDOM41aeM4CjA6p"
        data-mapping="title"
        data-strict="1"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="light"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>

<style>
  header {
    text-align: center;
    max-width: 50rem;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
